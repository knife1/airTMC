/**
 * JSON转换.
 * 
 * @param $
 *            jqueyr
 */
(function ($){
	// 数组对象转换成Json对象
	$.fn.serializeJson = function (){
		var serializeObj = {};
		var array = this.serializeArray();
		$(array).each(function (){
			this.value = filterKeyWord(this.value);
			if (serializeObj[this.name]) {
				if ($.isArray(serializeObj[this.name])) {
					serializeObj[this.name].push(this.value);
				}
				else {
					serializeObj[this.name] = [ serializeObj[this.name], this.value ];
				}
			}
			else {
				serializeObj[this.name] = this.value;
			}
		});
		return serializeObj;
	};

	// Json对象转换成json字符串
	$.fn.jsonToString = function (parameters){
		var arrResult = [];
		for ( var key in parameters) {
			if (parameters[key] === null || parameters[key] === undefined) {
				continue;
			}

			arrResult.push('"' + key + '":"' + parameters[key] + '"');
		}

		var json = '{' + arrResult.join(',') + '}';
		return json;
	};

	// Json对象转换成json字符串
	$.fn.jsonToString = function (){
		var parameters = $(this)[0];
		var arrResult = [];
		for ( var key in parameters) {
			var parValue = parameters[key];

			if (parValue === null || parValue === undefined) {
				continue;
			}
			parValue = filterKeyWord(parValue); // 过滤"\"以免json序列化问题

			arrResult.push('"' + key + '":"' + parValue + '"');
		}

		var json = '{' + arrResult.join(',') + '}';
		return json;
	};

	/**
	 * 数据填充
	 */
	$.fn.fillForm = function (json){
		var self = $(this);
		for ( var name in json) {
			name = $.trim(name);
			var inputObj = self.find("input[name='" + name + "']");
			if (inputObj.length === 0) {
				inputObj = self.find("select[name='" + name + "']");
			}
			
			if (inputObj.length === 0) {
				inputObj = self.find("textarea[name='" + name + "']");
			}

			if (inputObj.length === 0) {
				continue;
			}

			var value = json[name];
			var inputType = inputObj[0].type;

			if (inputType === "checkbox") {

				for (var i = 0, len = inputObj.length; i < len; i++) {
					var itemCheck = $(inputObj[i]);
					if (value.toString() === itemCheck.attr("value")) {
						itemCheck.attr("checked", true);
						break;
					}
				}
			}
			else if (inputType === "radio") {
				self.find("input[name='" + name + "']").attr('checked',false);
				self.find("input[name='" + name + "'][value='" + value + "']").attr("checked", true);
			}
			else {
				inputObj.val(value);
			}
		}

	};

	// 转义"\"特殊字符
	function filterKeyWord (strKeyWord){
		if (strKeyWord.indexOf("\\") === -1) { return strKeyWord; }

		var str = strKeyWord.split("\\");
		var len = str.length;
		var arr = [];
		for (var i = 0; i < len; i++) {
			var keyValue = str[i];
			arr.push(keyValue);
		}

		return arr.join("\\\\");
	}

	$.extend({

		/*
		 * 根据参数名获取参数 @name String 参数名
		 */
		queryString : function (name){
			name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
			var regexS = "[\\?&]" + name + "=([^&#]*)";
			var regex = new RegExp(regexS);
			var results = regex.exec(decodeURIComponent(window.location.search));
			if (results == null) {
				return "";
			}
			else {
				return decodeURIComponent(results[1].replace(/\+/g, " "));
			}
		},

		confirm : function (msg, okCallBack, cancelCallBack){
			layer.confirm(msg, {
				btn : [ '确定', '取消' ]
			// 按钮
			}, function (index){
				layer.close(index);
				if (typeof okCallBack === "function") {
					okCallBack();
				}

			}, function (){
				if (typeof cancelCallBack === "function") {
					cancelCallBack();
				}
			});
		},
		validateTips : function (msg){
			layer.alert(msg);
		},
		disableBtnLoading : function (btn, msg){
			if (!msg) {
				msg = "保存中...";
			}

			$(btn).val(msg);
			$(btn).attr("disabled", "disabled");
		},
		enableBtnLoading : function (btn, msg){
			if (!msg) {
				msg = "保存";
			}

			$(btn).val(msg);
			$(btn).removeAttr("disabled");
		},
		responseHandler : function (responseJson){
			var result = responseJson;
			if (typeof responseJson !== "object") {
				result = $.parseJSON(responseJson);
			}

			if (result.code === 1) {
				return result.content || true;
			}
			else if (result.code === 4) {
				layer.alert(result.message || "操作失败");
				return false;
			}
			else {
				layer.alert(result.message);
				return false;
			}
		},
		layerMsg : function (responseJson, msg, callback){
			// msg提示

			var result = this.responseHandler(responseJson);

			if (!result) { return; }

			layer.msg(msg, {
				time : 1000
			}, function (){
				if (typeof callback === "function") {
					callback();
				}
			});
		},
		validateReg : {
			email : /[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?/
		}
	});
	$.fn.dealIframeH = function () {
        if ($.queryString("orgUrl") || $.cookie("orgUrl_s")) {
            var orgUrl = $.queryString("orgUrl") || $.cookie("orgUrl_s");
            $.cookie("orgUrl_s", orgUrl);
            var $agentIframe = '<iframe id="agentIframe" name="agentIframe" src="" class="hide"> </iframe>';
            $("body").append($agentIframe);
            var _height = document.body.scrollHeight;
            var b_iframe = document.getElementById("agentIframe"); //agent.html的iframe的id
            if (b_iframe) {
              var src = orgUrl.split("#")[0];
              src = src.split("?")[0];
              b_iframe.src = src + "?" + new Date().getTime() + "#" + _height;
            }
        } 
    }
    $.fn.goBack = function() {
        var b_iframe = document.getElementById("agentIframe"); //agent.html的iframe的id
        if (b_iframe) {
			if ($.queryString("orgUrl") || $.cookie("orgUrl_s")) {
				var orgUrl = $.queryString("orgUrl") || $.cookie("orgUrl_s");
				var src = orgUrl.split("#")[0];
            	src = src.split("?")[0];
            	b_iframe.src = src;
			} else {
				history.back();
			}
        } else {
			history.back();
		}
    }

})(jQuery);
